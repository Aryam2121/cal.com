/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "./core";
import * as SupalarryApi from "./api";
export declare namespace SupalarryApiClient {
    interface Options {
        environment: core.Supplier<string>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class SupalarryApiClient {
    protected readonly _options: SupalarryApiClient.Options;
    constructor(_options: SupalarryApiClient.Options);
    appControllerGetHealth(requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    bookingsControllerCreateBooking(request: SupalarryApi.CreateBookingInput, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    oAuthClientUsersControllerCreateUser(clientId: string, request?: SupalarryApi.CreateUserInput, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    oAuthClientUsersControllerGetUserById(clientId: string, userId: number, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    oAuthClientUsersControllerDeleteUser(clientId: string, userId: number, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    oAuthClientUsersControllerUpdateUser(clientId: string, userId: number, request: SupalarryApi.UpdateUserInput, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    oAuthClientsControllerGetOAuthClients(requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    oAuthClientsControllerCreateOAuthClient(request?: SupalarryApi.CreateOAuthClientInput, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    oAuthClientsControllerGetOAuthClientById(clientId: string, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    oAuthClientsControllerDeleteOAuthClient(clientId: string, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    oAuthClientsControllerUpdateOAuthClient(clientId: string, request?: SupalarryApi.UpdateOAuthClientInput, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    oAuthFlowControllerAuthorize(clientId: string, request?: SupalarryApi.OAuthAuthorizeInput, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    oAuthFlowControllerExchange(clientId: string, request: SupalarryApi.ExchangeAuthorizationCodeInput, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    oAuthFlowControllerRefreshAccessToken(clientId: string, request: SupalarryApi.RefreshTokenInput, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    eventTypesControllerCreateEventType(request?: SupalarryApi.CreateEventTypeInput, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    eventTypesControllerGetEventType(eventTypeId: string, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    gcalControllerRedirect(request: SupalarryApi.GcalControllerRedirectRequest, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    gcalControllerSave(request: SupalarryApi.GcalControllerSaveRequest, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    gcalControllerCheck(requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    calProviderControllerVerifyClientId(clientId: string, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    calProviderControllerVerifyAccessToken(clientId: string, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    schedulesControllerGetSchedules(requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    schedulesControllerCreateSchedule(request?: SupalarryApi.CreateScheduleInput, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    schedulesControllerGetDefaultSchedule(requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    schedulesControllerGetSchedule(scheduleId: number, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    schedulesControllerDeleteSchedule(scheduleId: number, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    schedulesControllerUpdateSchedule(scheduleId: number, request?: SupalarryApi.UpdateScheduleInput, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    meControllerGetMe(requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    meControllerUpdateMe(request: SupalarryApi.UpdateUserInput, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    calendarControllerGetBusyTimes(requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    bookingsControllerCreateReccuringBooking(request: string[], requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    bookingsControllerCreateInstantBooking(request: SupalarryApi.CreateBookingInput, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    eventsControllerGetPublicEvent(requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
    slotsControllerReserveSlot(request?: SupalarryApi.ReserveSlotInput, requestOptions?: SupalarryApiClient.RequestOptions): Promise<void>;
}
